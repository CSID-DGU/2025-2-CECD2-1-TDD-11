$schema: https://azuremlschemas.azureedge.net/promptflow/latest/Flow.schema.json
environment:
  python_requirements_txt: requirements.txt
inputs:
  user_info:
    type: object
    properties:
      user_name:
        type: string
        default: 최시원
        description: 사용자의 이름
        is_chat_input: false
      date_of_birth:
        type: string
        default: 2000-02-21
        description: 사용자의 출생일
        is_chat_input: false
      gender:
        type: string
        default: FEAMLE
        description: 사용자의 성별
        is_chat_input: false
      has_children:
        type: string
        default: no
        description: 사용자의 자녀 여부 (yes/no)
        is_chat_input: false
      occupation:
        type: string
        default: 프로그래머
        description: 사용자의 직업
        is_chat_input: false
      education_level:
        type: string
        default: 대학교 재학
        description: 사용자의 교육 수준
        is_chat_input: false
      marital_status:
        type: string
        default: 미혼
        description: 사용자의 결혼 여부
        is_chat_input: false
    default: {
      "user_name": "최시원",
      "date_of_birth": "2000-02-21",
      "gender": "FEAMLE",
      "occupation": "프로그래머",
      "education_level": "대학교 재학",
      "marital_status": "미혼"
    }
  chapter_info:
    type: object
    properties:
      title:
        type: string
        default: 20대
        description: 챕터의 제목
        is_chat_input: false
      description:
        type: string
        default: 대학 생활과 첫 직장 경험
        description: 챕터의 설명
        is_chat_input: false
    default: {
      "title": "20대",
      "description": "대학 생활과 첫 직장 경험"
    }
  sub_chapter_info:
    type: object
    properties:
      title:
        type: string
        default: 첫 직장 생활
        description: 서브 챕터의 제목
        is_chat_input: false
      description:
        type: string
        default: 소프트웨어 회사에서의 첫 직장 경험과 적응 과정
        description: 서브 챕터의 설명
        is_chat_input: false
    default: {
      "title": "첫 직장 생활",
      "description": "소프트웨어 회사에서의 첫 직장 경험과 적응 과정"
      }

outputs:
  interview_questions:
    type: string
    reference: ${generate_interview_questions.output}

nodes:
- name: generate_interview_questions
  type: llm
  source:
    type: code
    path: generate_interview_questions.jinja2
  inputs:
    model: gpt-4o-mini
    temperature: 0.4
    top_p: 1
    response_format:
      type: json_object
    user_info: ${inputs.user_info}
    chapter_info: ${inputs.chapter_info}
    sub_chapter_info: ${inputs.sub_chapter_info}
  connection: open_ai_connection
  api: chat
